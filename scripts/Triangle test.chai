def material(c)
{
  Materials.uniform( [ "ambient": Colors.white() * 0.1,
                       "diffuse": c * 0.8,
                       "specular": Colors.white() * 0.5,
                       "specular_exponent": 10,
                       "reflectivity": 0.0,
                       "transparency": 0,
                       "refractive_index": 0 ] )
}

def scene_at(now)
{
  /*var eye_position = Animations.lissajous( [ "x_amplitude": 5,
                                             "x_frequency": 1,
                                             "x_phase": degrees(90),
                                             "y_amplitude": 5,
                                             "y_frequency": 1,
                                             "y_phase": degrees(0),
                                             "z_amplitude": 5,
                                             "z_frequency": 1,
                                             "z_phase": degrees(0),
                                             "duration": seconds(5) ] )


  var camera = Cameras.perspective( [ "eye": eye_position[now],
                                      "look_at": pos(0,0,0) ] )*/
                                      
  var camera_x = Animations.animate(3, -3, seconds(2.5))[now]
  var camera = Cameras.perspective( [ "eye": pos(camera_x,3,3),
                                      "look_at": pos(0,0,0) ] )


  var p1 = Pos.spherical(1, degrees(0), degrees(90))
  var p2 = Pos.spherical(1, degrees(60), degrees(-30))
  var p3 = Pos.spherical(1, degrees(180), degrees(-30))
  var p4 = Pos.spherical(1, degrees(-60), degrees(-30))

  var root = union( [ decorate( material(Colors.red()), triangle(p1, p2, p3) ),
                     decorate( material(Colors.green()), triangle(p1, p3, p4) ),
                     decorate( material(Colors.blue()), triangle(p1, p4, p2) ),
                     decorate( material(Colors.yellow()), triangle(p2, p4, p3) ) ] )

  var lights = [ Lights.omnidirectional( pos(0, 5, 0), Colors.white() ), Lights.omnidirectional( pos(0, -5, 0), Colors.white() ) ]

  create_scene(camera, root, lights)
}

var renderer    = Renderers.standard( [ "width": 500,
                                       "height": 500,
                                       "sampler": Samplers.single(),
                                       "ray_tracer": Raytracers.v3() ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(10),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout()
          ] )